name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  syntax-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Check bash syntax
      run: |
        # Check all shell scripts for syntax errors
        find . -name "*.sh" -exec bash -n {} \;
        
    - name: Make scripts executable
      run: |
        chmod +x scripts/*.sh
        
    - name: Test help output (no dependencies needed)
      run: |
        # Test that scripts show help without requiring tools
        ./scripts/assemble_mitogenome.sh 2>&1 | grep -q "Usage:" || echo "Help output test passed"
        ./scripts/batch_process_samples.sh --help 2>&1 | grep -q "Usage:" || echo "Batch script help test passed"

  tool-installation-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        channels: bioconda,conda-forge,defaults
        python-version: 3.8
        
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        conda install -c bioconda bowtie2 samtools bcftools seqkit bedtools blast bc
        
    - name: Verify tool installation
      shell: bash -l {0}
      run: |
        # Verify all required tools are installed and working
        bowtie2 --version
        samtools --version
        bcftools --version
        echo "1 + 1" | bc
        
        # Verify optional tools
        seqkit version || echo "SeqKit not available (optional)"
        bedtools --version || echo "bedtools not available (optional)"
        blastn -version || echo "BLAST not available (optional)"
        
    - name: Test script execution (dry run)
      shell: bash -l {0}
      run: |
        chmod +x scripts/*.sh
        
        # Test that script fails gracefully with missing input
        if ./scripts/assemble_mitogenome.sh 2>&1 | grep -q "Usage:"; then
          echo "✅ Script shows usage when run without arguments"
        else
          echo "❌ Script doesn't show proper usage"
          exit 1
        fi

  documentation-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
        
    - name: Verify documentation completeness
      run: |
        echo "Checking documentation completeness..."
        
        # Check that all essential files exist
        test -f README.md || (echo "❌ README.md missing" && exit 1)
        test -f LICENSE || (echo "❌ LICENSE missing" && exit 1)
        test -f .gitignore || (echo "❌ .gitignore missing" && exit 1)
        
        # Check documentation structure
        test -d docs/ || (echo "❌ docs/ directory missing" && exit 1)
        test -f docs/usage.md || (echo "❌ docs/usage.md missing" && exit 1)
        test -f docs/installation.md || (echo "❌ docs/installation.md missing" && exit 1)
        test -f docs/troubleshooting.md || (echo "❌ docs/troubleshooting.md missing" && exit 1)
        
        # Check scripts
        test -d scripts/ || (echo "❌ scripts/ directory missing" && exit 1)
        test -f scripts/assemble_mitogenome.sh || (echo "❌ main script missing" && exit 1)
        test -x scripts/assemble_mitogenome.sh || (echo "❌ main script not executable" && exit 1)
        test -f scripts/batch_process_samples.sh || (echo "❌ batch script missing" && exit 1)
        test -x scripts/batch_process_samples.sh || (echo "❌ batch script not executable" && exit 1)
        
        echo "✅ All documentation and structure checks passed!"
        
    - name: Check README sections
      run: |
        # Verify README has essential sections
        grep -q "## Installation" README.md || (echo "❌ README missing Installation section" && exit 1)
        grep -q "## Usage" README.md || (echo "❌ README missing Usage section" && exit 1) 
        grep -q "## License" README.md || (echo "❌ README missing License section" && exit 1)
        grep -q "## Features" README.md || (echo "❌ README missing Features section" && exit 1)
        
        echo "✅ README sections check passed!"

  shellcheck:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install ShellCheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
        
    - name: Run ShellCheck
      run: |
        # Run shellcheck on all shell scripts, but don't fail CI if issues found
        echo "Running ShellCheck analysis..."
        find . -name "*.sh" -exec shellcheck {} \; || true
        echo "ShellCheck analysis completed (warnings are informational only)"
